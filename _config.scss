/* SaSS variable declaration. */
$primary-color: #444;
$secondary-color: #EECE1A;
$thirdary-color: rgba(54, 181, 190, 0.584);
$show-home-image: true;
$show-Pages-Image: true;
$home-image: url(abstrology.jpg);
$background-opacity: 0.4;

/* Mixin: Interface/Class to apply multiple SASS properties easily. */
@mixin ease-Out{
    transition: all 0.5s ease-Out;
}

@mixin glo-Bar{
    transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
    // Flash class and keyframe animation 
    -webkit-animation: flash linear 3s infinite;
    animation: flash linear 3s infinite;
    @-webkit-keyframes flash{
        0% { opacity: 1; } 
	    50% { opacity: .1; } 
	    100% { opacity: 1; }
    }
   @keyframes flash{
       0% { opacity: 1; } 
       50% { opacity: .1; } 
       100% { opacity: 1; }
    }    
}

@mixin background{
    @if $show-home-image{
        &#bgImg{
            /* Attach $home-image url linked variable to background. */
            background: $home-image;
            /* Keeps the image statically placed. */
            background-attachment: fixed;
            /* Covers the entire background (stretches img to capacity). */
            background-size: cover;

            &:after{
                /* Must insert content variable */
                content: ' '; /* Empty quotes if not necessary. */
                /* Cover the entire body. */
                position: absolute;
                /* Start from top and right 0. */
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                z-index: -1;
                text-decoration: none;
                background: rgba($primary-color, $background-opacity);
            }
        }
    }
}

@mixin bG_{
    @if $show-Pages-Image{
        &#bgImg_{
            /* Attach $home-image url linked variable to background. */
            background: $home-image;
            /* Keeps the image statically placed. */
            background-attachment: fixed;
            /* Covers the entire background (stretches img to capacity). */
            background-size: cover;

            /* :after */
            &:after{
                /* Must insert content variable */
                content: ' '; /* Empty quotes if not necessary. */
                /* Cover the entire body. */
                position: absolute;
                /* Start from top and right 0. */
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                z-index: -1;
                text-decoration: none;
                background: rgba($primary-color, $background-opacity + 0.2);
            }
        }
    }
}

// Set Text Color
@function set-Text-Color($color)
{
    // Whatever color is passed in, if the lightness is less than 30...
    @if(lightness($color) > 40){
        @return #000;
    }@else{
        @return #FFF;
    }
}

// Media Query Mixins
@mixin mediaSm{
    /* Requires the media to be a screen and with MX 500px. */
    @media screen and (max-width: 500px){
        @content;
    }
}

@mixin mediaMd{
    /* Requires the media to be a screen and with MX 500px. */
    @media screen and (max-width: 768px){
        @content;
    }
}

@mixin mediaLg{
    /* Requires the media to be a screen and with min 769px. 
    (one above mediaMd) and max-width 1171. */
    @media screen and (min-width: 769px) and (max-width: 1170px){
        @content;
    }
}

@mixin mediaX{
    /* Requires the media to be a screen and with min 769px. 
    (one above mediaMd) and max-width 1171. */
    @media screen and (min-width: 1171px){
        @content;
    }
}
/*
// menuClosed false; Assume the menu is closed, default SASS.
$menuClosed: false;
@mixin menuSpan{
    @if !$menuClosed{
        &#list{
            @if 
        }
    }
}
*/